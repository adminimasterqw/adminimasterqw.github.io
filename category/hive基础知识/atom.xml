<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://methiony.work</id>
    <title>Andrésen • Posts by &#34;hive基础知识&#34; category</title>
    <link href="https://methiony.work" />
    <updated>2020-12-04T01:23:45.000Z</updated>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
        <title>Hive的基本概念</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;1hive的基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1hive的基本概念&#34;&gt;#&lt;/a&gt; 1.Hive 的基本概念&lt;/h1&gt;
&lt;h2 id=&#34;11hive简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11hive简介&#34;&gt;#&lt;/a&gt; 1.1.Hive 简介&lt;/h2&gt;
&lt;h3 id=&#34;hive的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hive的概念&#34;&gt;#&lt;/a&gt; Hive 的概念&lt;/h3&gt;
&lt;p&gt;Hve 是基于 Hadoop 的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供类 SQL 查询功能&lt;br /&gt;
其本质是将 SQL 转换为 MapReduce 的任务进行运算，底层由 HDFS 来提供数据的存储，说白了 hive 可以理解为一个将 SQL 转换为 MapReduce 的任务的工具，甚至更进一步可以说 hive 就是一个 Map Reduce 的客户端&lt;/p&gt;
&lt;h3 id=&#34;hive的优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hive的优点&#34;&gt;#&lt;/a&gt; Hive 的优点&lt;/h3&gt;
&lt;p&gt;1、采用类 SQL 语法去操作数据，提供快速开发的能力&lt;br /&gt;
 2、避免了去写 MapReduce, 减少开发人员的学习成本&lt;br /&gt;
 3、功能扩展很方便&lt;/p&gt;
&lt;p&gt;4、用户接口：包括 CLI、JDBC/ODBC、 WebGUI, 其中，CLI (command line interface) 为 shell 命令行；JDBC/ODBC 是 Hive 的 JAVA 实现，与传统数据库 JDBC 类似；WebGUI 是通过浏览器访问 Hive&lt;br /&gt;
5、元数据存储：通常是存储在关系数据库如 mysql/derby 中。Hve 将元数据存储在数据库中。Hive 中的元数据包括表的名字，表的列和分区及其属性，表的属性 (是否为外部表等), 表的数据所在目录等&lt;br /&gt;
 6、解释器、编译器、优化器、执行嚣：完成 HQL 査询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在 HDFS 中，并在随后有 MapReduce 调用执行&lt;/p&gt;
&lt;h2 id=&#34;12hive与-hadoop的关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12hive与-hadoop的关系&#34;&gt;#&lt;/a&gt; 1.2.Hive 与 Hadoop 的关系&lt;/h2&gt;
&lt;p&gt;Hive 利用 HDFS 存储数据利用 MapReduce 查询分析数据&lt;/p&gt;
&lt;h2 id=&#34;13hive与传统数据库对比&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13hive与传统数据库对比&#34;&gt;#&lt;/a&gt; 1.3.Hive 与传统数据库对比&lt;/h2&gt;
&lt;p&gt;hive 用于海量数据的离线数据分析&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Hive&lt;/th&gt;
&lt;th&gt;RDBMS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;查询语言&lt;/td&gt;
&lt;td&gt;HQL&lt;/td&gt;
&lt;td&gt;SQL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据存储&lt;/td&gt;
&lt;td&gt;HDFS&lt;/td&gt;
&lt;td&gt;Raw Device or Local FS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;执行&lt;/td&gt;
&lt;td&gt;MapReduce&lt;/td&gt;
&lt;td&gt;Excutor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;执行延迟&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;td&gt;低&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;处理数据规模&lt;/td&gt;
&lt;td&gt;大&lt;/td&gt;
&lt;td&gt;小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;索引&lt;/td&gt;
&lt;td&gt;0.8 版本后加入位图索引&lt;/td&gt;
&lt;td&gt;复杂的索引&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;14hive的安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14hive的安装&#34;&gt;#&lt;/a&gt; 1.4.Hive 的安装&lt;/h2&gt;
&lt;p&gt;下载地址为:http:/archive.apache.org/dist/&lt;br /&gt;
 下载之后，将我们的安装包上传到第三台机器的 /usr/local/src 目录下面去&lt;/p&gt;
&lt;h3 id=&#34;第一步上传并解压安装包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一步上传并解压安装包&#34;&gt;#&lt;/a&gt; 第一步：上传并解压安装包&lt;/h3&gt;
&lt;p&gt;将我们的 hive 的安装包上传到第三台服务器的 /usr/local/src 路径下，然后进行解压&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /usr/local/src &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; -zxvf apache-hive-1.1.0-bin.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;第二步修改hive的配置文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二步修改hive的配置文件&#34;&gt;#&lt;/a&gt; 第二步：修改 hive 的配置文件&lt;/h3&gt;
&lt;p&gt;修改 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hpdmUtZW55LnNo&#34;&gt;hive-eny.sh&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /usr/local/src/apache-hive-1.1.0-bin/conf&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cp&lt;/span&gt; hive-env.sh.template hive-env.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;HADOOP_HOME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/local/src/hadoop-2.6.0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;HIVE_CONF_DIR&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/local/src/apache-hive-1.1.0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vi&lt;/span&gt; hive-site.xml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#34;1. 0&#34; encoding=&#34;UTF-8 standalone=&#34;no&#34;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml-stylesheet type=&#34;text/xsl&#34;href=&#34;configuration. xsl&#34;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;avax.jdo.option.ConnectionUserName&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;root&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;javax.jdo.option.ConnectionPassword&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;123456&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;javax.jdo.option.ConnectionURL&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;jdbc:mysql://node01:3306/hive?&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;createDatabaseIfNotExist=true&lt;span class=&#34;token entity named-entity&#34; title=&#34;&amp;amp;&#34;&gt;&amp;amp;amp;&lt;/span&gt;useSSL-false&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;javax.jdo.option.ConnectionDriverName&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com.mysql.jdbc.Driver&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 以下配置可省略 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hive.metastore.schema.verification&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;false&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;propertv&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;datanucleus.schema.autoCreateAll&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;true&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hive.server2.thrift.bind.host&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;node03&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;configuration&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;第三步配置hive的环境变量可省略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三步配置hive的环境变量可省略&#34;&gt;#&lt;/a&gt; 第三步：配置 hive 的环境变量（可省略）&lt;/h3&gt;
&lt;p&gt;node03 服务器执行以下命令配置 hⅳve 的环境变量&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vi&lt;/span&gt; /etc/profile&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;HIVE_HOME&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/usr/local/src/apache-hive-1.1.1-bin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;&lt;span class=&#34;token environment constant&#34;&gt;PATH&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;:&lt;span class=&#34;token variable&#34;&gt;$SHIVE_HOME&lt;/span&gt;/bin: SPATH&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;第四步添加mysql的连接驱动包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第四步添加mysql的连接驱动包&#34;&gt;#&lt;/a&gt; 第四步：添加 mysql 的连接驱动包&lt;/h3&gt;
&lt;p&gt;hive 使用 mysql 作为元数据存储，必然需要连接 mysql 数据库，所以我们添加一个 mysql 的连接驱动包到 hive 的安装目录下，然后就可以准备启动 hive 了&lt;/p&gt;
&lt;p&gt;将我们准备好的 mysql-connector-java-5.1.38.jar 这个 jar 包直接上传到&lt;br /&gt;
 /usr/local/src/ apache-hive1.1.0-bin/1ib 这个目录下即可&lt;br /&gt;
至此，hive 的安装部署已经完成。&lt;/p&gt;
&lt;h2 id=&#34;15hve的交互方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15hve的交互方式&#34;&gt;#&lt;/a&gt; 1.5.Hve 的交互方式&lt;/h2&gt;
&lt;h3 id=&#34;客户端操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#客户端操作&#34;&gt;#&lt;/a&gt; 客户端操作&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /usr/local/src/apache-hive-1.1.1-bin/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bin/hive&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建一个数据库&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create database &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; not exists mytest&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;非客户端操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非客户端操作&#34;&gt;#&lt;/a&gt; 非客户端操作&lt;/h3&gt;
&lt;p&gt;使用 sq1 语句或者 sq1 脚本进行交互不进入 hive 的客户端直接执行 hive 的 hql 语句&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /usr/local/src/apache-hive-1.1.1-bin/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bin/hive -e &lt;span class=&#34;token string&#34;&gt;&#34;create database if not exists mytest;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;或者将我们的 hql 语句写成一个 sql 脚本然后执行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /usr/local/src&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vi&lt;/span&gt; hive.sql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create database &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; not exists mytest&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use mytest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table stu&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id int, name string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过 hive-f 来执行我们的 sql 脚本&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;bin/hive -f /usr/local/src/hive.sql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <updated>2020-12-04T01:23:45.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E8%B0%83%E4%BC%98/</id>
        <title>Hive的调优</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E8%B0%83%E4%BC%98/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
        <updated>2020-12-04T00:48:12.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F/</id>
        <title>Hive的数据存储格式</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%A0%BC%E5%BC%8F/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
        <updated>2020-12-04T00:47:45.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/</id>
        <title>Hive的数据压缩</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8E%8B%E7%BC%A9/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
        <updated>2020-12-04T00:47:27.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E5%87%BD%E6%95%B0/</id>
        <title>Hive的函数</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E5%87%BD%E6%95%B0/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;hive的函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hive的函数&#34;&gt;#&lt;/a&gt; Hive 的函数&lt;/h1&gt;
&lt;h2 id=&#34;1-常用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-常用函数&#34;&gt;#&lt;/a&gt; 1、常用函数&lt;/h2&gt;
&lt;p&gt;求总行数 (count)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; from score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;求分数的最大值 (max&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; max&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; from score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;求分数的最小值 (min)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; min&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; from score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;求分数的总和 (sum)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; from score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;求分数的平均值 (avg)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; avg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; from score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;2-limit语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-limit语句&#34;&gt;#&lt;/a&gt; 2、LIMIT 语句&lt;/h2&gt;
&lt;p&gt;典型的查询会返回多行数据。LIMIT 子句用于限制返回的行数。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score limit &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;3-where语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-where语句&#34;&gt;#&lt;/a&gt; 3、where 语句&lt;/h2&gt;
&lt;p&gt;查询分数等于 80 的所有的数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询分数在 80 到 100 的所有数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score between &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt; and &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询成绩空的所有数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score is null&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询成绩是 80 和 90 的数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score in&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;, &lt;span class=&#34;token number&#34;&gt;90&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;4-lke和rlke&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-lke和rlke&#34;&gt;#&lt;/a&gt; 4、LKE 和 RLKE&lt;/h2&gt;
&lt;p&gt;1. 使用 LIKE 运算选择类似的值&lt;br /&gt;
 2. 选择条件可以包含字符或数字&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;% 代表零个或多个字符(任意个字符)。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;_代表一个字符。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;3.RLKE 子句是 Hive 中这个功能的一个扩展，其可以通过 Java 的正则表达式这个更强大的语言来指定匹配条件。&lt;/p&gt;
&lt;p&gt;4. 案例实操&lt;br /&gt;
查找以 8 开头的所有成绩&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score like &lt;span class=&#34;token string&#34;&gt;&#39;8%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查找第二个数值为 9 的所有成绩数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score like &lt;span class=&#34;token string&#34;&gt;&#39;_9%&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查找 sid 中含 1 的数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_id rlike &lt;span class=&#34;token string&#34;&gt;&#39;[1]&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# like &#39;%1%&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;5-逻辑运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-逻辑运算符&#34;&gt;#&lt;/a&gt; 5、逻辑运算符&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;AND&lt;/td&gt;
&lt;td&gt;逻辑并&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OR&lt;/td&gt;
&lt;td&gt;逻辑或&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOT&lt;/td&gt;
&lt;td&gt;逻辑否&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;查询成绩大于 80, 并且 s_id 是 01 的数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt; and s_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;01&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询成绩大于 80, 或者 sid 是 01 的数&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_score &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt; or s_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;01&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询 s_id 不是 01 和 02 的学生&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where s_id not &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;01&#39;&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#39;02&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <updated>2020-12-04T00:47:10.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive-Shell%E5%8F%82%E6%95%B0/</id>
        <title>Hive Shell参数</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive-Shell%E5%8F%82%E6%95%B0/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
</content>
        <updated>2020-12-04T00:46:47.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95/</id>
        <title>Hive的查询语法</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E6%9F%A5%E8%AF%A2%E8%AF%AD%E6%B3%95/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;hive查询语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hive查询语法&#34;&gt;#&lt;/a&gt; Hive 查询语法&lt;/h1&gt;
&lt;h2 id=&#34;1-selec&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-selec&#34;&gt;#&lt;/a&gt; 1、SELEC&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;SELECT [ALL | DISTINCT] select_expr, select_expr,...
FROM table_reference
[WHERE where_condition]
[GROUP BY col_list [HAVING condition]]
[CLUSTER BY col_list | [DISTRIBUTE BY col_list] [ SORT BY | ORDER BY col_list]]
[LIMIT number]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;order by 会对输入做全局排序，因此只有一个 reducer, 会导致当输入规模较大时，需要较长的计算时间。&lt;/p&gt;
&lt;p&gt;sort by 不是全局排序，其在数据进入 reducer 前完成排序。因此，如果用 sort by 进行排序，并且设置 mapred.reduce.tasks&amp;gt;1, 则 sort by 只保证每个 reduce 的输出有序，不保证全局有序。&lt;/p&gt;
&lt;p&gt;distribute by (字段) 根据指定的字段将数据分到不同的 reducer, 且分发算法是 hash 散列.&lt;/p&gt;
&lt;p&gt;cluster by (字段) 除了具有 distribute by 的功能外，还会对该字段进行排序&lt;br /&gt;
因此，如果 distribute 和 sort 字段是同一个时，此时，cluster by= distribute by  + sort by&lt;/p&gt;
&lt;h2 id=&#34;2-分组&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-分组&#34;&gt;#&lt;/a&gt; 2、分组&lt;/h2&gt;
&lt;h3 id=&#34;21group-by语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21group-by语句&#34;&gt;#&lt;/a&gt; 2.1.GROUP BY 语句&lt;/h3&gt;
&lt;p&gt;GROUP BY 语句通常会和聚合函数一起使用，按照一个或者多个列队结果进行分组，然后对每个组执行聚合操作。&lt;/p&gt;
&lt;p&gt;案例实操&lt;br /&gt;
计算每个学生的平均分数&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; s_id, avg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; from score group by s_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;计算每个学生最高成绩&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; s_id ,max&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s.score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; from score group by s_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;22having语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22having语句&#34;&gt;#&lt;/a&gt; 2.2.HAVING 语句&lt;/h3&gt;
&lt;h4 id=&#34;having与-where不同点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#having与-where不同点&#34;&gt;#&lt;/a&gt; having 与 where 不同点&lt;/h4&gt;
&lt;p&gt;where 针对表中的列发挥作用，查询数据；having 针对查询结果中的列发挥作用，筛&lt;br /&gt;
选数据。&lt;br /&gt;
where 后面不能写分组函数，而 hang 后面可以使用分组函数 having 只用于 group by 分组统计语句&lt;/p&gt;
&lt;h4 id=&#34;案例实操&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例实操&#34;&gt;#&lt;/a&gt; 案例实操:&lt;/h4&gt;
&lt;p&gt;求每个学生的平均分数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select s_id, avg(s_score) from score group by s_id;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;求每个学生平均分数大于 85 的人&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; s_id ,avg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; avgscore from score group by s_id having avgscore &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;85&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;23join语句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23join语句&#34;&gt;#&lt;/a&gt; 2.3.JOIN 语句&lt;/h3&gt;
&lt;p&gt;等值 JOIN&lt;br /&gt;
Hⅳve 支持通常的 SQL JOIN 语句，但是只支持等值连接，不支持非等值连接。&lt;br /&gt;
案例操作:&lt;/p&gt;
&lt;p&gt;查询分数对应的姓名&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; s.s_id, s.s_score, stu.s_name, stu.s_birth from score s &lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt; student stu on s.s_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stu s_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;24表的别名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#24表的别名&#34;&gt;#&lt;/a&gt; 2.4. 表的别名&lt;/h3&gt;
&lt;p&gt;好处&lt;br /&gt;
使用别名可以简化查询。&lt;br /&gt;
使用表名前缀可以提高执行效率&lt;/p&gt;
&lt;p&gt;案例实操&lt;br /&gt;
合并老师与课程表&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from techer t &lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt; course c on t.t_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c.t_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;25内连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#25内连接&#34;&gt;#&lt;/a&gt; 2.5. 内连接&lt;/h3&gt;
&lt;p&gt;内连接：只有进行连接的两个表中都存在与连接条件相匹配的数据才会被保留下来。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from techer t inner &lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt; course c on t.t_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c.t_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;26左外连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#26左外连接&#34;&gt;#&lt;/a&gt; 2.6. 左外连接&lt;/h3&gt;
&lt;p&gt;左外连接：JOIN 操作符左边表中符合 WHERE 子句的所有记录将会被返回。&lt;/p&gt;
&lt;p&gt;查询老师对应的课程&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from techer t left &lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt; course c on t.t_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c.t_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;27右外连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#27右外连接&#34;&gt;#&lt;/a&gt; 2.7. 右外连接&lt;/h3&gt;
&lt;p&gt;右外连接：JOIN 操作符右边表中符合 WHERE 子句的所有记录将会被返回。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from techer t right &lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt; course c on t.t_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; c.t_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;28多表连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#28多表连接&#34;&gt;#&lt;/a&gt; 2.8. 多表连接&lt;/h3&gt;
&lt;p&gt;注意：连接 n 个表，至少需要 n-1 个连接条件。例如：连接三个表，至少需要两个连接条件。&lt;br /&gt;
多表连接査询，查询老师对应的课程，以及对应的分数，对应的学生&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select * from teacher
left join course c
on t.t_id = c.t_id
left join score s
on s.c_id = c.c_id
left join student stu
on s.s_id =  stu.s_id;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;大多数情况下，Hive 会对每对 JOIN 连接对象启动一个 MapReduce 任务。本例中会首先启动一个 MapReduce job 对表 techer 和表 course 进行连接操作，然后会再启动一个 MapReduce job 将第&lt;br /&gt;
个 MapReduce job 的输出和表 score; 进行连接操作。&lt;/p&gt;
&lt;h2 id=&#34;3-排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-排序&#34;&gt;#&lt;/a&gt; 3、排序&lt;/h2&gt;
&lt;h3 id=&#34;31全局排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31全局排序&#34;&gt;#&lt;/a&gt; 3.1. 全局排序&lt;/h3&gt;
&lt;p&gt;Order By：全局排序，一个 reduce&lt;/p&gt;
&lt;p&gt;使用 ORDER BY 子句排序&lt;/p&gt;
&lt;p&gt;ASC (ascend): 升序 (默认)&lt;/p&gt;
&lt;p&gt;DESC (descend): 降序&lt;/p&gt;
&lt;p&gt;ORDER BY 子句在 SELECT 语句的结尾&lt;/p&gt;
&lt;p&gt;案例实操&lt;br /&gt;
查询学生的成绩，并按照分数降序排列&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SELECT * FROM student s LEFT JOIN score sco ON s.s_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sco.s_id ORDER BY sco.s_score DESC&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询学生的成绩，并按照分数升序排列&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SELECT * FROM student s LEFT JOIN score sco ON s.s_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sco.s_id ORDER BY sco.s_score asc&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;32别名排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32别名排序&#34;&gt;#&lt;/a&gt; 3.2. 别名排序&lt;/h3&gt;
&lt;p&gt;按照分数的平均值排序&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; s_id, avg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; avg from score group by s_id order by avg&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;33多个列排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33多个列排序&#34;&gt;#&lt;/a&gt; 3.3. 多个列排序&lt;/h3&gt;
&lt;p&gt;按照学生 id 和平均成绩进行排序&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; s_id, avg&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_score&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; avg from score group by s_id order by s_id,avg&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;34局部排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34局部排序&#34;&gt;#&lt;/a&gt; 3.4. 局部排序&lt;/h3&gt;
&lt;p&gt;每个 MapReduce 内部排序 (Sort By) 局部排序&lt;br /&gt;
 Sort By：每个 MapReduce 内部进行排序，对全局结果集来说不是排序&lt;br /&gt;
设置 reduce 个数&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; mapreduce.job.reduces&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看设置 reduce 个数&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; mapreduce.job.reduces&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询成绩按照成绩降序排列&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; by s_score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;将查询结果导入到文件中 (按照成绩降序排列)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;insert overwrite &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; directory &lt;span class=&#34;token string&#34;&gt;&#39;/usr/local/src/hivedatas/sort&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; by s_score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;4-分区排序-distribute-by&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-分区排序-distribute-by&#34;&gt;#&lt;/a&gt; 4、分区排序 (DISTRIBUTE BY)&lt;/h2&gt;
&lt;h3 id=&#34;41distribute-by&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41distribute-by&#34;&gt;#&lt;/a&gt; 4.1.Distribute By&lt;/h3&gt;
&lt;p&gt;类似 MR 中 partition, 进行分区，结合 sort by 使用&lt;/p&gt;
&lt;p&gt;注意，Hive 要求 D| STRIBUTE BY 语句要写在 SORT BY 语句之前。&lt;/p&gt;
&lt;p&gt;对于 distribute by 进行测试，一定要分配多 reduce 进行处理，否则无法看到 distribute by 的效果&lt;/p&gt;
&lt;p&gt;案例实操:&lt;/p&gt;
&lt;p&gt;先按照学生 id 进行分区，再按照学生成绩进行排序。&lt;br /&gt;
设置 reduce 的个数，将我们对应的 s_id 划分到对应的 reduce 当中去&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; mapreduce.job.reduces&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过 distribute by 进行数据的分区&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;insert overwrite &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; directory &lt;span class=&#34;token string&#34;&gt;&#39;/export/servers/hivedatas/sort&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score distribute by s_id &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; by s_score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;42-cluster-by&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-cluster-by&#34;&gt;#&lt;/a&gt; 4.2. CLUSTER BY&lt;/h3&gt;
&lt;p&gt;当 distribute by 和 sort by 字段相同时，可以使用 cluster by 方式。&lt;/p&gt;
&lt;p&gt;cluster by 除了具有 distribute by 的功能外还兼具 sort by 的功能。但是排序只能是倒序排序，不能指定排序规则为 ASC 或者 DESC&lt;/p&gt;
&lt;p&gt;以下两种写法等价&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score cluster by s_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score distribute by s_id &lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt; by s_id&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <updated>2020-12-04T00:46:24.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
        <title>Hive的基本操作</title>
        <link rel="alternate" href="https://methiony.work/2020/12/04/Platform-construction/Hive/course-5/Hive%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;1hive的基本操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1hive的基本操作&#34;&gt;#&lt;/a&gt; 1.Hive 的基本操作&lt;/h1&gt;
&lt;h2 id=&#34;11数据库操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11数据库操作&#34;&gt;#&lt;/a&gt; 1.1 数据库操作&lt;/h2&gt;
&lt;h3 id=&#34;111创建数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#111创建数据库&#34;&gt;#&lt;/a&gt; 1.1.1 创建数据库&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create database &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; not exists myhive&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use myhive&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明:hive 的表存放位置模式是由 hive-site.xml 当中的一个属性指定的&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;hive.metastore.warehouse.dir&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;/user/hive/warehouse&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;112刨建数据库并指定位置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#112刨建数据库并指定位置&#34;&gt;#&lt;/a&gt; 1.1.2 刨建数据库并指定位置&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create database myhive2 location &lt;span class=&#34;token string&#34;&gt;&#39;/myhive2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;113设置数据库键值对信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#113设置数据库键值对信息&#34;&gt;#&lt;/a&gt; 1.1.3 设置数据库键值对信息&lt;/h3&gt;
&lt;p&gt;数据库可以有一些描述性的键值对信息，在创建时添加:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create database foo with dbproperties &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;owner&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;itcast&#39;&lt;/span&gt;,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#39;date&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;28198128&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看数据库的键值对信息&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;describe database extended foo&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;修改数据库的键值对信息&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;alter database foo &lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; dbproperties &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;owner&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;itheima&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;114查看数据库更多详细信息&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#114查看数据库更多详细信息&#34;&gt;#&lt;/a&gt; 1.1.4 查看数据库更多详细信息&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;desc database extended myhive2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;115删除数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#115删除数据库&#34;&gt;#&lt;/a&gt; 1.1.5 删除数据库&lt;/h3&gt;
&lt;p&gt;删除一个空数据库，如果数据库下面有数据表，那么就会报错&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;drop database myhive2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;强制删除数据库，包含数据库下面的表一起删除&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;drop database myhive cascade&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;12数据库表操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12数据库表操作&#34;&gt;#&lt;/a&gt; 1.2 数据库表操作&lt;/h2&gt;
&lt;h3 id=&#34;121创建表的语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#121创建表的语法&#34;&gt;#&lt;/a&gt; 1.2.1 创建表的语法&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;external&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; table &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;if not exists&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; table_name&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col_name data_type&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;comment &lt;span class=&#34;token string&#34;&gt;&#39;字段描述信息&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;col_name data_type&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;comment &lt;span class=&#34;token string&#34;&gt;&#39;字段描述信息&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;comment &lt;span class=&#34;token string&#34;&gt;&#39;表的描述信息&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;partitioned by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col_name data-type,&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;clustered by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col_name,col_name,&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;sorted by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col_name &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;asc&lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;desc&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;.&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;into num_buckets buckets&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;row &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt; row_format&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;stored as &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;location &lt;span class=&#34;token string&#34;&gt;&#39;指定表的路径&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;说明&lt;/p&gt;
&lt;p&gt;1、create table&lt;br /&gt;
 创建一个指定名字的表。如果相同名字的表已经存在，则抛出异常；用户可以用 IF NOT EXISTS 选项来忽略这个异常。&lt;/p&gt;
&lt;p&gt;2、external&lt;br /&gt;
 可以让用户创建一个外部表，在建表的同时指定一个指向实际数据的路径&lt;br /&gt;
 (LOCATION),Hive 创建内部表时，会将数据移动到数据仓库指向的路径；若创建外部表，仅记录数据所在的路径，不对数据的位置做任何改变。在删除表的时候，内部表的元数据和数据会被一起删除，而外部表只删除元数据，不删除数据&lt;/p&gt;
&lt;p&gt;3、comment&lt;br /&gt;
 表示释，默认不能使用中文&lt;/p&gt;
&lt;p&gt;4、partitioned by&lt;br /&gt;
 表示使用表分区，一个表可以拥有一个或者多个分区，每一个分区单独存在一个目录下&lt;/p&gt;
&lt;p&gt;5、clustered by 对于每一个表分文件，Hive 可以进一步组织成桶，也就是说桶是更为细粒度的数据范围划分。Hive 也是针对某一列进行桶的组织。&lt;/p&gt;
&lt;p&gt;6、sorted by&lt;br /&gt;
 指定排序字段和排序规则&lt;/p&gt;
&lt;p&gt;7、row format&lt;br /&gt;
 指定表文件字段分隔符&lt;/p&gt;
&lt;p&gt;8、stored as 指定表文件的存储格式，常用格式 SEQUENCEFILE,,TEXTFILE, RCFILE, 如果文件数据是纯文本，可以使用 STORED AS TEXTFILE。如果数据需要压缩，使用 stored as&lt;br /&gt;
SEQUENCEFILE。&lt;/p&gt;
&lt;p&gt;9、location&lt;br /&gt;
 指定表文件的存储路径&lt;/p&gt;
&lt;h3 id=&#34;122建表入门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#122建表入门&#34;&gt;#&lt;/a&gt; 1.2.2 建表入门&lt;/h3&gt;
&lt;p&gt;建表入门&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use myhive&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table stu&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id int,name string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;insert into stu values&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#插入数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from stu&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建表并指定字段之间的分隔符&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; not exists stu2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id int,name string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; row &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt; delimited fields terminated by &lt;span class=&#34;token string&#34;&gt;&#39;it&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建表并指定表文件的存放路径&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; not exists stu2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id int,name string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; row &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt; delimited fields terminated by &lt;span class=&#34;token string&#34;&gt;&#39;&lt;span class=&#34;token entity&#34; title=&#34;\t&#34;&gt;\t&lt;/span&gt;&#39;&lt;/span&gt; location &lt;span class=&#34;token string&#34;&gt;&#39;/user/stu2&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;根据查询结果创建表&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table stu3 as &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from stu2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#通过复制表结构和表内容创建新表&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;根据已经存在的表结构创建表&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table stu4 like stu&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;重询表的详细信息&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;desc formatted stu2&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除表&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;drop table stu4&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;加载数据到多分区表中&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;load data &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; inpath &lt;span class=&#34;token string&#34;&gt;&#39;/usr/local/src/hivedatas/score.csv&#39;&lt;/span&gt; into table&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;score2 partition&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;2018&#39;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;month&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;06&#39;&lt;/span&gt;, &lt;span class=&#34;token assign-left variable&#34;&gt;day&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;01&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;多分区表联合查询使用 (union a11)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where month &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;201806&#39;&lt;/span&gt; union all &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from score where month &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;201806&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看分区&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;show partitions score&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;添加一个分区&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;alter table score &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; partition&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;month&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;201805&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除分区&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;alter table score drop partition &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;month &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;201806&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;加载数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;load data &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; inpath &lt;span class=&#34;token string&#34;&gt;&#39;/export/servers/hivedatas/student. csv&#39;&lt;/span&gt; into table student&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;加载数据并覆盖已有数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;load data &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; inpath &lt;span class=&#34;token string&#34;&gt;&#39;/export/servers/hivedatas/student. csv&#39;&lt;/span&gt; overwrite into table student&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;从 hdfs 文件系统向表中加载数据 (需要提前将数据上传到 hdfs 文件系统)&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /usr/local/src/hivedatas&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hdfs dfs -mkdir -p/hivedatas&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hdfs dfs -put techer.csv /hivedatas/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;load data inpath&lt;span class=&#34;token string&#34;&gt;&#39;/hivedatas/techer.csv&#39;&lt;/span&gt; into table teacher&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;13分区表的操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13分区表的操作&#34;&gt;#&lt;/a&gt; 1.3. 分区表的操作&lt;/h2&gt;
&lt;p&gt;概念&lt;/p&gt;
&lt;p&gt;在大数据中，最常用的种思想就是分治，可以把大的文件切割划分成一个一个的小的文件，这样每次操作一个小的文件就会很容易了，同样的道理，在 hive 当中也是支持这种思想的，就是我们可以把大的数据，按照每月，或者每天进行切分成一个个的小的文件存放在不同的文件夹中&lt;/p&gt;
&lt;p&gt;创建分区表语法&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table score&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_id string,c-id string,s_score int&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; partitioned by &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;month string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; row &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt; delimited fields terminated by &lt;span class=&#34;token string&#34;&gt;&#39;&lt;span class=&#34;token entity&#34; title=&#34;\t&#34;&gt;\t&lt;/span&gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建一个表带多个分区&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table score2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;s_id string,c_id string, s_score int&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; partitioned by&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;year string, month string, day string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; row &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt; delimited fields terminated by &lt;span class=&#34;token string&#34;&gt;&#39;&lt;span class=&#34;token entity&#34; title=&#34;\t&#34;&gt;\t&lt;/span&gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;加载数据到分区表中&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;load data &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; inpath &lt;span class=&#34;token string&#34;&gt;&#39;/export/servers/hivedatas/score.csv&#39;&lt;/span&gt; into table&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;score partition&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;month&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;201806&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;14分桶表操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14分桶表操作&#34;&gt;#&lt;/a&gt; 1.4. 分桶表操作&lt;/h2&gt;
&lt;p&gt;概念&lt;/p&gt;
&lt;p&gt;分桶，就是将数据按照指定的字段进行划分到多个文件当中去，分桶就是 MapReduce 中的分区&lt;/p&gt;
&lt;p&gt;开启 Hive 的分桶功能&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; hive.enforce.bucketing&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;设置 Reduce 个数&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; mapreduce.job.reduces&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建分桶表&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table course &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c_id string, c_name string, t_id string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; clustered by&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; into &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt; buckets row &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt; delimited fields terminated by &lt;span class=&#34;token string&#34;&gt;&#39;&lt;span class=&#34;token entity&#34; title=&#34;\t&#34;&gt;\t&lt;/span&gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;桶表的数据加载，由于通标的数据加载通过 hdfs dfs-put 文件或者通过 load data 均不好使，只能通过 insert overwrite 创建普通表，并通过 insert overwrite 的方式将普通表的数据通过査询的方式加载到桶表当中去&lt;/p&gt;
&lt;p&gt;创建普通表&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create table course_common&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c_id string, c_name string, t_id string&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; row &lt;span class=&#34;token function&#34;&gt;format&lt;/span&gt; delimited fields terminated by &lt;span class=&#34;token string&#34;&gt;&#39;&lt;span class=&#34;token entity&#34; title=&#34;\t&#34;&gt;\t&lt;/span&gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;普通表中加载数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;load data &lt;span class=&#34;token builtin class-name&#34;&gt;local&lt;/span&gt; inpath &lt;span class=&#34;token string&#34;&gt;&#39;/usr/local/src/hivedatas/course.csv&#39;&lt;/span&gt; into table&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;course_common&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过 insert overwrite 给桶表中加载数据&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;insert overwrite table course &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; * from course_common cluster by&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;c_id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;15修改表结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15修改表结构&#34;&gt;#&lt;/a&gt; 1.5. 修改表结构&lt;/h2&gt;
&lt;p&gt;重命名&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;alter table old_table_name &lt;span class=&#34;token function&#34;&gt;rename&lt;/span&gt; to new_table_name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;把表 scoe4 修改成 score5&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;alter table score4 &lt;span class=&#34;token function&#34;&gt;rename&lt;/span&gt; to score5&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;增加 / 修改列信息&lt;br /&gt;
查询表结构&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;desc score5&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;添加列&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;alter table score5 &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; columns&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;mycol string, mysco int&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更新列&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;alter table score5 change &lt;span class=&#34;token function&#34;&gt;column&lt;/span&gt; mysco mysconew int&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除表&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;drop table score5&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <updated>2020-12-04T00:46:02.000Z</updated>
    </entry>
    <entry>
        <id>https://methiony.work/2020/11/27/Platform-construction/Hive/course-5/Hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E8%BF%B0/</id>
        <title>Hive基本概述</title>
        <link rel="alternate" href="https://methiony.work/2020/11/27/Platform-construction/Hive/course-5/Hive%E5%9F%BA%E6%9C%AC%E6%A6%82%E8%BF%B0/"/>
        <content type="html">&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;以下为个人学习笔记&lt;br /&gt;
课程： 大数据自学教程 Hadoop 从零到精通完整版 @&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5&#34;&gt;黑马程序员大数据教程&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==&#34;&gt; https://www.bilibili.com/video/BV1ek4y117Yq&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;hive基本概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hive基本概述&#34;&gt;#&lt;/a&gt; Hive 基本概述&lt;/h1&gt;
&lt;h2 id=&#34;1数据仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1数据仓库&#34;&gt;#&lt;/a&gt; 1. 数据仓库&lt;/h2&gt;
&lt;h3 id=&#34;11基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11基本概念&#34;&gt;#&lt;/a&gt; 1.1 基本概念&lt;/h3&gt;
&lt;p&gt;英文名称为 Data Warehouse, 可简写为 DW 或 DWH。数据仓库的目的是构建面向分析的集成化数据环境，为企业提供决策支持 (Decision Support)。&lt;/p&gt;
&lt;p&gt;数据仓库是存数据的，主要目的是为了分析有效数据，后续会基于它产出供分析挖掘的数据，或者数据应用需要的数据，如企业的分析性报告和各类报表等。&lt;br /&gt;
可以理解为：面向分析的存储系统。&lt;/p&gt;
&lt;h2 id=&#34;12主要特征&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12主要特征&#34;&gt;#&lt;/a&gt; 1.2 主要特征&lt;/h2&gt;
&lt;p&gt;数据仓库是面向主题的 (Subject-Oriented)、集成的 ( integrated)、非易失的 (Non&lt;br /&gt;
Volatile) 和时变的 (Time-Variant) 数据集合，用以支持管理决策.&lt;/p&gt;
&lt;h3 id=&#34;121面向主题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#121面向主题&#34;&gt;#&lt;/a&gt; 1.2.1 面向主题&lt;/h3&gt;
&lt;p&gt;数据仓库是面向主题的，数据仓库通过一个个主题域将多个业务系统的数据加载到一起，为了各个主题 (如：用户、订单、商品等) 进行分析而建，操作型数据库是为了支撑各种业务而建立&lt;/p&gt;
&lt;h3 id=&#34;122集成性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#122集成性&#34;&gt;#&lt;/a&gt; 1.2.2 集成性&lt;/h3&gt;
&lt;p&gt;数据仓库会将不同源数据库中的数据汇总到起，数据仓库中的综合数据不能从原有的数据库&lt;br /&gt;
系统直接得到。因此在数据进入数据仓库之前，必然要经过统一与整合，这一步是据仓库建设中最关键、最复杂的一步 (ET 凵，要统一源数据中所有矛盾之处，如字段的同名义、异名同义、单位不统一、字长不一致，等等&lt;/p&gt;
&lt;h3 id=&#34;123非易失性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#123非易失性&#34;&gt;#&lt;/a&gt; 1.2.3 非易失性&lt;/h3&gt;
&lt;p&gt;操作型数据库主要服务于日常的业务操作，使得数据库需要不断地对数据实时更新，以便迅速获得当前最新数据，不至于影响正常的业务运作。&lt;/p&gt;
&lt;p&gt;在数据仓库中只要保存过去的业务数据，不需要每一笔业务都实时更新数据仓库，而是根据商业需要毎隔一段时间把一批较新的数据导入数据仓库。数据仓库的数据反映的是一段相当长的时间内历史数据的内容，是不同时点的数据库的集合，以及基于这些快照进行统计、综合和重组的导出数据工数据仓库中的数据一般仅执行査询操作，很少会有删除和更新。但是需定期加载和刷新数据&lt;/p&gt;
&lt;h3 id=&#34;124时变性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#124时变性&#34;&gt;#&lt;/a&gt; 1.2.4 时变性&lt;/h3&gt;
&lt;p&gt;数据仓库包含各种粒度的历史数据。数据仓库中的数据可能与某个特定日期、星期、月份、季度或者年份有关。数据仓库的目的是通过分析企业过去一段时间业务的经营状况，挖掘其中隐藏的模式。虽然数据仓库的用户不能修改数据，但并不是说数据仓库的数据是永远不变的。分析的结果只能反映过去的情况，当业务变化后，挖掘出的模式会失去时效性。因此数据仓库的数据需要定时更新，以适应决策的需要.&lt;/p&gt;
&lt;h2 id=&#34;13数据库与数据仓库的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13数据库与数据仓库的区别&#34;&gt;#&lt;/a&gt; 1.3 数据库与数据仓库的区别&lt;/h2&gt;
&lt;p&gt;数据库与数据仓库的区别实际讲的是 0TP 与 OLAP 的区别。&lt;/p&gt;
&lt;p&gt;0TP&lt;/p&gt;
&lt;p&gt;操作型处理，叫联机事务处理 OLTP (On-Line Transaction Processing,), 也可以称面向交易的处理系统，它是针对具体业务在数据库联机的日常操作，通常对少数记录进行査询、修改。用户较为关心操作的响应时间、数据的安全性、完整性和并发支持的用户数等问题。传统的数据库系统作为数据管理的主要手段，主要用于操作型处理。&lt;/p&gt;
&lt;p&gt;OLAP&lt;/p&gt;
&lt;p&gt;分析型处理，叫联机分析处理 OLAP (On-Line Analytical Processing)- 般针对某些主题的历史数据进行分析，支持管理决策。&lt;br /&gt;
首先要明白，数据仓库的出现，并不是要取代数据库&lt;br /&gt;
・数据库是面向事务的设计，数据仓库是面向主题设计的。&lt;br /&gt;
・数据库一般存储业务数据，数据仓库存储的一般是历史数据&lt;br /&gt;
・数据库设计是尽量避免冗余，一般针对某一业务应用进行设计，比如一张简单的 User 表&lt;br /&gt;
记录用户名、密码等简单数据即可，符合业务应用，但是不符合分析。数据仓库在设计是有意引入冗余，依照分析需求，分析维度、分析指标进行设计。&lt;br /&gt;
・数据库是为捕获数据而设计，数据仓库是为分析数据而设计。&lt;/p&gt;
&lt;p&gt;数据仓库，是在数据库已经大量存在的情况下，为了进一步挖掘数据资源、为了决策需要而产生的，它决不是所谓的 “大型数据库”。&lt;/p&gt;
&lt;h2 id=&#34;14数仓的分层架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14数仓的分层架构&#34;&gt;#&lt;/a&gt; 1.4 数仓的分层架构&lt;/h2&gt;
&lt;p&gt;按照数据流入流岀的过程，数据仓库架构可分为三层 -- 源数据、数据仓库、数据应用。&lt;/p&gt;
&lt;p&gt;数据仓库的数据来源于不同的源数据，并提供多样的数据应用，数据自下而上流入数据仓库后向上层开放应用，而数据仓库只是中间集成化数据管理的一个平台。&lt;/p&gt;
&lt;p&gt;源数据层 (DS): 此层数据无任何更改，直接沿用外围系统数据结构和数据，不对外开&lt;br /&gt;
放；为临时存储层，是接口数据的临时存储区域，为后一步的数据处理做准备。&lt;/p&gt;
&lt;p&gt;数据仓库层 (DW): 也称为细节层，DW 层的数据应该是一致的、准确的、干净的数据&lt;br /&gt;
即对源系统数据进行了清洗 (去除了杂质) 后的数据&lt;/p&gt;
&lt;p&gt;数据应用层 (DA 或 APP): 前端应用直接读取的数据源；根据报表、专题分析需求而计算生成的数据。&lt;/p&gt;
&lt;p&gt;数据仓库从各数据源获取数据及在数据仓库内的数据转换和流动都可以认为是 ETL (抽取 Extra, 转化 Transfer, 装载 Load) 的过程，ETL 是数据仓库的流水线，也可以认为是数据仓库的血液，它维系着数据仓库中数据的新陈代谢，而数据仓库曰常的管理和维护工作的大部分精力就是保持 ETL 的正常和稳定&lt;/p&gt;
&lt;h2 id=&#34;15数仓的元数据管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15数仓的元数据管理&#34;&gt;#&lt;/a&gt; 1.5 数仓的元数据管理&lt;/h2&gt;
&lt;p&gt;元数据 (Meta Date), 主要记录数据仓库中模型的定义、各层级间的映射关系、监控数据仓库的数据状态及 ETL 的任务运行状态。一般会通过元数据资料库 ( Metadata Repository) 来统一地存储和管理元数据，其主要目的是使数据仓库的议计、部署、操作和管理能达成协同和一致&lt;/p&gt;
&lt;p&gt;元数据是数据仓库管理系统的重要组成部分，元数据管理是企业级数据仓库中的关键组件，贯穿数据仓库构建的整个过程，直接影响着数据仓库的构建、使用和维护。&lt;/p&gt;
&lt;p&gt;a、构建数据仓库的主要步骤之一是 ETL。这时元数据将发挥重要的作用，它定义了源数据系统到数据仓库的映射、数据转换的规则、数据仓库的逻辑结构、数据更新的规则、数据导入历史记录以及装载周期等相关内容。数据抽取和转换的专家以及数据仓库管理员正是通过元数据高效地构建数据仓库&lt;br /&gt;
 b、用户在使用数据仓库时，通过元数据访问数据，明确数据项的含义以及定制报表&lt;br /&gt;
 c、数据仓库的规模及其复杂性离不开正确的元数据管理，包括増加或移除外部数据源，改变数据清洗方法，控制岀错的査询以及安排备份等。&lt;/p&gt;
&lt;p&gt;元数据可分为技术元数据和业务元数据&lt;/p&gt;
&lt;h3 id=&#34;技术元数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#技术元数据&#34;&gt;#&lt;/a&gt; 技术元数据&lt;/h3&gt;
&lt;p&gt;为开发和管理数据仓库的 T 人员使用，它描述了与数据仓库开发、管理和维护相关的数据，包括数据源信息、数据转换描述、数据仓库模型、数据凊洗与更新规则、数据映射和访问权限等。&lt;/p&gt;
&lt;h3 id=&#34;业务元数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#业务元数据&#34;&gt;#&lt;/a&gt; 业务元数据&lt;/h3&gt;
&lt;p&gt;为管理层和业务分析人员服务，从业务角度描述数据，包括商务术语、数据仓库中有什么数据、数据的位置和数据的可用性等，帮助业务人员更好地理解数据仓库中哪些数据是可用的以及如何使用。&lt;/p&gt;
&lt;p&gt;由上可见，元数据不仅定义了数据仓库中数据的模式、来源、抽取和转换规则等，而且是整个数据仓库系统运行的基础，元数据把数据仓库系统中各个松散的组件联系起来，组成了一个有机的整体&lt;/p&gt;
</content>
        <updated>2020-11-27T14:30:30.000Z</updated>
    </entry>
</feed>
