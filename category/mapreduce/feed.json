{
    "version": "https://jsonfeed.org/version/1",
    "title": "Andrésen • All posts by \"mapreduce\" category",
    "description": "",
    "home_page_url": "https://methiony.work",
    "items": [
        {
            "id": "https://methiony.work/2020/11/27/Platform-construction/Mapreduce/course-3/MapReduce%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "url": "https://methiony.work/2020/11/27/Platform-construction/Mapreduce/course-3/MapReduce%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "title": "MapReduce基本概念",
            "date_published": "2020-11-27T09:56:36.000Z",
            "content_html": "<p>:::note info<br />\n 以下为个人学习笔记<br />\n课程： 大数据自学教程 Hadoop 从零到精通完整版 @<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vNTg2Mzg5MDQ5\">黑马程序员大数据教程</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWVrNHkxMTdZcQ==\"> https://www.bilibili.com/video/BV1ek4y117Yq</span><br />\n:::</p>\n<h1 id=\"1-mapreduce介绍\"><a class=\"anchor\" href=\"#1-mapreduce介绍\">#</a> 1、MapReduce 介绍</h1>\n<p>MapReduce 思想在生活中处处可见。或多或少都曾接触过这种思想。 MapReduce 的思想核心<br />\n是 &quot; 分而治之”, 适用于大量复杂的任务处理场景 (大规模数据处理场景)</p>\n<p>1、Map 负责 “分”, 即把复杂的任务分解为若干个 “简单的任务” 来并行处理。可以进行拆分的<br />\n前提是这些小任务可以并行计算，彼此间几乎没有依赖关系<br />\n 2、Reduce 负责 “合”, 即对 map 阶段的结果进行全局汇总<br />\n 3、MapReduce 运行在 yarn 集群</p>\n<p>ResourceManage</p>\n<p>NodeManager<br />\n 这两个阶段合起来正是 MapReduce 思想的体现</p>\n<p>4、还有一个比较形象的语言解释 MapReduce<br />\n 我们要数图书馆中的所有书。你数 1 号书架，我数 2 号卡架。这就是 Map&quot;。我们人越多，数书<br />\n就更快。<br />\n现在我们到一起，把所有人的统计数加在一起。这就是 “Reduce”。</p>\n<h1 id=\"2-mapreduce设计构思\"><a class=\"anchor\" href=\"#2-mapreduce设计构思\">#</a> 2、MapReduce 设计构思</h1>\n<h2 id=\"1-编程框架\"><a class=\"anchor\" href=\"#1-编程框架\">#</a> 1、编程框架</h2>\n<p>MapReduce 是一个分布式运算程序的编程框架，核心功能是将用户编写的业务逻辑代码和自带默认组件整合成一个完整的分布式运算程序，并发运行在 Hadoop 集群上。<br />\nMapReduce 设计并提供了统一的计算框架，隐藏了绝大多数系统层面的处理细节，提供一个抽象和高层的编程接口和框架。</p>\n<h2 id=\"2-处理方式\"><a class=\"anchor\" href=\"#2-处理方式\">#</a> 2、处理方式</h2>\n<p>程序员仅需要关心其应用层的具体计算问题，仅需编写少量的处理应用本身计算问题的程序代码。如何具体完成这个并行计算任务所相关的诸多系统层细节被隐藏起来交给计算框架去处理</p>\n<h2 id=\"3-编程接口\"><a class=\"anchor\" href=\"#3-编程接口\">#</a> 3、编程接口</h2>\n<p>Map 和 Reduce 为程序员提供了一个清晰的操作接口抽象描述。 MapReduce 中定义了如下的 Map 和 Reduce 两个抽象的编程接口，由用户去编程实现 Map 和 Reduce</p>\n<h2 id=\"4-数据类型\"><a class=\"anchor\" href=\"#4-数据类型\">#</a> 4、 数据类型</h2>\n<p>MapReduce 处理的数据类型是 &lt;key,value&gt; 键值对<br />\n・Map: (k1; v1)→[ ( k2; V2) ]<br />\n·Reduce: ( k2; [v2] )-[ (k3;  v3) ]</p>\n<p>一个完整的 mapreduce 程序在分布式运行时有三类实例进程</p>\n<ol>\n<li>MRAppMaster 负责整个程序的过程调度及状态协调</li>\n<li>MapTask 负责 map 阶段的整个数据处理流程</li>\n<li>ReduceTask 负责 reduce 阶段的整个数据处理流程</li>\n</ol>\n<h1 id=\"3-mapreduce分区\"><a class=\"anchor\" href=\"#3-mapreduce分区\">#</a> 3、MapReduce 分区</h1>\n<h2 id=\"1-分区概述\"><a class=\"anchor\" href=\"#1-分区概述\">#</a> 1、分区概述</h2>\n<p>在 MapReduce 中，通过我们指定分区，会将同一个分区的数据发送到同一个 Reduce 当中进行处理<br />\n例如：为了数据的统计，可以把一批类似的数据发送到同一个 Reduce 当中，在同一个 Reduce 当中统计相同类型的数据，就可以实现类似的数据分区和统计等<br />\n其实就是相同类型的数据，有共性的数据，送到一起去处理 Reduce 当中默认的分区只有一个</p>\n",
            "tags": []
        }
    ]
}